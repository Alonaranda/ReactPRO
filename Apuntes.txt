Utilizar git para ver distintas etapas del proyecto,
En rama main todo esta con react-router-dom v5

react-app -> Carpeta con React-Router-Dom V6 basico

============================================================

Lazyload: Sirve para que no cargue toda la aplicacion y solo 
ciertas partes, se puede dividir por chunks

LazyLoad basico y sencillo

git checkout lazyload-rrd-v6

Lazyload con Rutas anidadas 

git checkout lazyload-nested-rrd-v6

============================================================

    Storybook
 
 Empezar tu proyecto norma:
    
    npx create-react-app my-app --template typescript

Agregar Storybook a tu proyecto:

    npx sb init 

Para correr:

    npm run storybook 

Modulos de CSS:

https://www.npmjs.com/package/@storybook/addon-postcss

    npm i @storybook/addon-postcss

    npm i -D @storybook/addon-postcss postcss css-loader

``` - .storybook/main.js

addons: [
  
  {
    name: '@storybook/addon-postcss',
    options: {
      postcssLoaderOptions: {
        implementation: require('postcss'),
      },
    },
  },
  
  ]
}
```


``` - postcss.config.js
module.exports = {
  // Add your installed PostCSS plugins here:
  plugins: [
    // require('autoprefixer'),
    // require('postcss-color-rebeccapurple'),
  ],
};
```

Para desplegar mi Storybook 

1.- Necesito un servidor

  npm i http-server

============================================================

      Workbox
Docs: 
https://developers.google.com/web/tools/workbox/guides/generate-service-worker/cli
https://developers.google.com/web/tools/workbox/modules/workbox-sw


Instalar CLI de Workbox:

  npm install workbox-cli --global

Correr Wizard para una configuración fácil:\

  workbox wizard

Generar el Service Worker (Sin modificación en el Config)

  workbox generateSW workbox-config.js

Agregar en /public/index.html
```
    <script>
      console.log('%NODE_ENV%');
      const isProduction = ( '%NODE_ENV%' === 'production' );

      if ( isProduction && 'serviceWorker' in navigator ) {
        navigator.serviceWorker.register( 'sw.js' )
      }
    </script>
```




Para hacer configuraciones propias: 
 
En /src/sw-template.js

  /* eslint-disable no-undef */
  importScripts('https://storage.googleapis.com/workbox-cdn/releases/6.2.0/workbox-sw.js');
  workbox.precaching.precacheAndRoute( __WB_MANIFEST );


En /workbox-config.js agregar: 

  module.exports = {
	globDirectory: 'build/',
	globPatterns: [
		'**/*.{json,ico,html,png,txt,css,js}'
	],
	swDest: 'build/sw.js',
	swSrc: 'src/sw-template.js',
	injectionPoint: '__WB_MANIFEST'
};


Generar el Sw 

  workbox injectManifest



Workbox Background Sync - Eventos sin conexion 

Hacen una cola de todo lo que se hizo sin conexion  



