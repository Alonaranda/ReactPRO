{"ast":null,"code":"var _jsxFileName = \"/Users/chrisalonso/Documents/Chris/Mis Repositorios/ReactPRO/bases/src/bases/CounterEffect.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAXIMUN_COUNT = 10;\nexport const CounterEffect = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const counterElement = useRef(null);\n\n  const handleClick = () => {\n    setCounter(prev => Math.min(prev + 1, MAXIMUN_COUNT)); // if (counter < MAXIMUN_COUNT) {\n    //     setCounter( prev => prev +1 );\n    // } else {\n    //     console.log('%cYa no puedes aumentar', 'color: green');\n    // }\n  }; //UseLayoutEffect tambien se puede usar, se espera a que termine de montarse todo el HTML\n\n\n  useEffect(() => {\n    if (counter < 3) return;\n    console.log('%cSuperaste el limite', 'color: red'); //Animacion GSAP\n\n    const timeLine = gsap.timeline();\n    timeLine.to(counterElement.current, {\n      y: -10,\n      duration: 0.3,\n      ease: 'ease.out'\n    });\n    timeLine.to(counterElement.current, {\n      y: 0,\n      duration: 1,\n      ease: 'bounce.out'\n    });\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CounterEffect:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      ref: counterElement,\n      children: [\" \", counter, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CounterEffect, \"XdRJtOxFUfFieBWygqaJQHXKGms=\");\n\n_c = CounterEffect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterEffect\");","map":{"version":3,"sources":["/Users/chrisalonso/Documents/Chris/Mis Repositorios/ReactPRO/bases/src/bases/CounterEffect.tsx"],"names":["useEffect","useRef","useState","gsap","MAXIMUN_COUNT","CounterEffect","counter","setCounter","counterElement","handleClick","prev","Math","min","console","log","timeLine","timeline","to","current","y","duration","ease"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,MAArB;;;AAEA,MAAMC,aAAa,GAAG,EAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AAEA,QAAMM,cAAc,GAAGP,MAAM,CAAqB,IAArB,CAA7B;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACtBF,IAAAA,UAAU,CAAEG,IAAI,IAAIC,IAAI,CAACC,GAAL,CAASF,IAAI,GAAG,CAAhB,EAAmBN,aAAnB,CAAV,CAAV,CADsB,CAEtB;AACA;AACA;AACA;AACA;AACH,GAPD,CAL+B,CAc/B;;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGM,OAAO,GAAG,CAAb,EAAgB;AAChBO,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoC,YAApC,EAFY,CAIZ;;AACA,UAAMC,QAAQ,GAAGZ,IAAI,CAACa,QAAL,EAAjB;AACAD,IAAAA,QAAQ,CAACE,EAAT,CAAYT,cAAc,CAACU,OAA3B,EAAoC;AAACC,MAAAA,CAAC,EAAE,CAAC,EAAL;AAASC,MAAAA,QAAQ,EAAE,GAAnB;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAApC;AACAN,IAAAA,QAAQ,CAACE,EAAT,CAAYT,cAAc,CAACU,OAA3B,EAAoC;AAACC,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,QAAQ,EAAE,CAAjB;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAApC;AAEH,GATQ,EASN,CAACf,OAAD,CATM,CAAT;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,GAAG,EAAEE,cAAT;AAAA,sBAA4BF,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH,CAjCM;;GAAMJ,a;;KAAAA,a","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { gsap } from 'gsap'\n\nconst MAXIMUN_COUNT = 10;\n\nexport const CounterEffect = () => {\n    const [counter, setCounter] = useState(0);\n\n    const counterElement = useRef<HTMLHeadingElement>(null);\n\n    const handleClick = () => {\n        setCounter( prev => Math.min(prev + 1, MAXIMUN_COUNT));\n        // if (counter < MAXIMUN_COUNT) {\n        //     setCounter( prev => prev +1 );\n        // } else {\n        //     console.log('%cYa no puedes aumentar', 'color: green');\n        // }\n    }\n\n    //UseLayoutEffect tambien se puede usar, se espera a que termine de montarse todo el HTML\n    useEffect(() => {\n        if(counter < 3) return;\n        console.log('%cSuperaste el limite','color: red');\n\n        //Animacion GSAP\n        const timeLine = gsap.timeline();\n        timeLine.to(counterElement.current, {y: -10, duration: 0.3, ease: 'ease.out'})\n        timeLine.to(counterElement.current, {y: 0, duration: 1, ease: 'bounce.out'})\n\n    }, [counter])\n\n    return (\n        <>\n            <h1>CounterEffect:</h1>\n            <h2 ref={counterElement}> { counter } </h2>\n            <button onClick={handleClick}>+1</button>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}